<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
                        http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">

    <display-name>Legacy Web Application</display-name>
    <servlet>
        <servlet-name>sessionReplication</servlet-name>
        <servlet-class>com.myorg.hzsession.HazelcastSessionReplication</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>sessionReplication</servlet-name>
        <url-pattern>/hazelcast</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>10</session-timeout>
    </session-config>

    <servlet>
        <servlet-name>logout</servlet-name>
        <servlet-class>com.myorg.hzsession.LogoutServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>logout</servlet-name>
        <url-pattern>/logout</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>hazelcast-filter</filter-name>
        <filter-class>com.hazelcast.web.WebFilter</filter-class>
        <!--
            Name of the distributed map storing
            your web session objects
        -->
        <init-param>
            <param-name>map-name</param-name>
            <param-value>wc-sessions</param-value>
        </init-param>
        <!--
            How is your load-balancer configured?
            stick-session means all requests of a session
            is routed to the node where the session is first created.
            This is excellent for performance.
            If sticky-session is set to false, when a session is updated
            on a node, entry for this session on all other nodes is invalidated.
            You have to know how your load-balancer is configured before
            setting this parameter. Default is true.
        -->
        <init-param>
            <param-name>sticky-session</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
            Name of session id cookie
        -->
        <init-param>
            <param-name>cookie-name</param-name>
            <param-value>hazel_session_wc</param-value>
        </init-param>

        <!-- cookie max age -->
        <init-param>
            <param-name>cookie-max-age</param-name>
            <param-value>660</param-value>
        </init-param>
        <!-- this cannot be set if we are using client mode -->
        <init-param>
            <param-name>session-ttl-seconds</param-name>
            <param-value>${max-idle-seconds}</param-value>
        </init-param>
        <!--
            Should cookie only be sent using a secure protocol? Default is false.
        -->
        <init-param>
            <param-name>cookie-secure</param-name>
            <param-value>false</param-value>
        </init-param>
        <!--
            Should HttpOnly attribute be set on cookie ? Default is false.
        -->
        <init-param>
            <param-name>cookie-http-only</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
            Are you debugging? Default is false.
        -->
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>

        <!--
            Do you want to connect as a client to an existing cluster?
            Default is false.
        -->
        <init-param>
            <param-name>use-client</param-name>
            <param-value>false</param-value>
        </init-param>
        <!--
            Client configuration location;
                * as servlet resource OR
                * as classpath resource OR
                * as URL
            Default is null.
        -->

        <init-param>
            <param-name>config-location</param-name>
            <param-value>/WEB-INF/hazelcast.xml</param-value>
        </init-param>

        <!--
            Do you want to shutdown HazelcastInstance during
            web application undeploy process?
            Default is true.
        -->
        <init-param>
            <param-name>shutdown-on-destroy</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

     <filter-mapping>
        <filter-name>hazelcast-filter</filter-name>
        <url-pattern>${HAZEL_MAPPING}</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <listener>
        <listener-class>com.myorg.hzsession.BeforeListener</listener-class>
    </listener>

   <listener>
        <listener-class>com.myorg.hzsession.HazelSessionListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>StartupServlet</servlet-name>
        <servlet-class>com.myorg.hzsession.StartupServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
</web-app>
